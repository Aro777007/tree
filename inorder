#include <iostream>
#include <stack>

using namespace std;

struct node {
    int data;
    struct node* left;
    struct node* right;
};
// left root right

struct node* newNode(int data)
{
    node* node = new struct node;
    node->data = data;
    node->left = nullptr;
    node->right = nullptr;
    return (node);
}

void iterativeInorder(node* root)
{
    stack<node*> nodeStack;
    node* curr = root;

    while (curr != nullptr || !nodeStack.empty()) {
        while (curr != nullptr) {
            nodeStack.push(curr);
            curr = curr->left;
        }

        curr = nodeStack.top();
        nodeStack.pop();

        cout << curr->data << " ";

        curr = curr->right;
    }
}

int main()
{

    struct node* root = newNode(10);
    root->left = newNode(8);
    root->right = newNode(2);
    root->left->left = newNode(3);
    root->left->right = newNode(5);
    root->right->left = newNode(2);
    iterativeInorder(root);
    return 0;
}
